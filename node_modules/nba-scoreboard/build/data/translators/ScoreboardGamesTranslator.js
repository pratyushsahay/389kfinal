'use strict';
'use es6';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _immutable = require('immutable');

var _momentTimezone = require('moment-timezone');

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

var _jstimezonedetect = require('jstimezonedetect');

var _jstimezonedetect2 = _interopRequireDefault(_jstimezonedetect);

var _ScoreboardGameTranslator = require('./ScoreboardGameTranslator');

var _ScoreboardGameTranslator2 = _interopRequireDefault(_ScoreboardGameTranslator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ScoreboardGamesTranslator = function () {
  function ScoreboardGamesTranslator() {
    _classCallCheck(this, ScoreboardGamesTranslator);
  }

  _createClass(ScoreboardGamesTranslator, null, [{
    key: 'translate',
    value: function translate(data) {
      if (!('sports_content' in data)) {
        throw new ReferenceError('sports content field missing');
      }

      if (!('games' in data.sports_content)) {
        throw new ReferenceError('games field missing');
      }

      if (!('game' in data.sports_content.games)) {
        throw new ReferenceError('game field missing');
      }

      var games = data.sports_content.games.game;
      return (0, _immutable.List)(games.map(function (game) {
        return _ScoreboardGameTranslator2.default.translate(game);
      }));
    }
  }]);

  return ScoreboardGamesTranslator;
}();

exports.default = ScoreboardGamesTranslator;