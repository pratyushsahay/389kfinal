'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _Constants = require('../../constants/Constants');

var _Constants2 = _interopRequireDefault(_Constants);

var _BoxScoreDataTranslator = require('../../translators/data/BoxScoreDataTranslator');

var _BoxScoreDataTranslator2 = _interopRequireDefault(_BoxScoreDataTranslator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BoxScoreClient = function () {
  function BoxScoreClient() {
    _classCallCheck(this, BoxScoreClient);

    this.boxScoreBaseUrl = 'http://data.nba.com/data/5s/json/cms/noseason/game';
  }

  _createClass(BoxScoreClient, [{
    key: 'generateBoxScoreUrl',
    value: function generateBoxScoreUrl(formattedGameDate, gameId) {
      return this.boxScoreBaseUrl + '/' + formattedGameDate + '/' + gameId + '/boxscore.json';
    }
  }, {
    key: 'fetch',
    value: function fetch(formattedGameDate, gameId) {
      var boxScoreUrl = this.generateBoxScoreUrl(formattedGameDate, gameId);
      return (0, _requestPromise2.default)({ uri: boxScoreUrl, json: true }).then(function (boxScoreData) {
        return _BoxScoreDataTranslator2.default.translateBoxScoreData(boxScoreData);
      }).catch(function (err) {
        return console.log(err);
      });
    }
  }]);

  return BoxScoreClient;
}();

exports.default = BoxScoreClient;