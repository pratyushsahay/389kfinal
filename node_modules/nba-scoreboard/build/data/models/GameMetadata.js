'use strict';
'use es6';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _immutable = require('immutable');

var _momentTimezone = require('moment-timezone');

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

var _jstimezonedetect = require('jstimezonedetect');

var _jstimezonedetect2 = _interopRequireDefault(_jstimezonedetect);

var _Team = require('../../data/models/Team');

var _Team2 = _interopRequireDefault(_Team);

var _Location = require('../../data/models/Location');

var _Location2 = _interopRequireDefault(_Location);

var _Constants = require('../../constants/Constants');

var _Constants2 = _interopRequireDefault(_Constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaults = {
  id: 0,
  status: "",
  url: "",
  unixMillisecondsStartTime: 0,
  location: new _Location2.default(),
  isPreviewAvailable: true,
  isRecapAvailable: true,
  periodValue: "",
  periodStatus: "",
  gameClock: "",
  broadcasts: [],
  visitor: new _Team2.default(),
  home: new _Team2.default()
};

var GameMetadata = function (_Record) {
  _inherits(GameMetadata, _Record);

  function GameMetadata() {
    _classCallCheck(this, GameMetadata);

    return _possibleConstructorReturn(this, (GameMetadata.__proto__ || Object.getPrototypeOf(GameMetadata)).apply(this, arguments));
  }

  _createClass(GameMetadata, [{
    key: 'getNbaStatsFormattedStartDate',
    value: function getNbaStatsFormattedStartDate() {
      var userTimezone = _jstimezonedetect2.default.determine().name();
      return (0, _momentTimezone2.default)(this.unixMillisecondsStartTime).tz(_Constants2.default.DEFAULT_TIMEZONE).format(_Constants2.default.DEFAULT_DATE_FORMAT);
    }
  }, {
    key: 'getLocalizedStartDateTime',
    value: function getLocalizedStartDateTime() {
      var userTimezone = _jstimezonedetect2.default.determine().name();
      return (0, _momentTimezone2.default)(this.unixMillisecondsStartTime).tz(userTimezone).format(_Constants2.default.TRANSLATED_DATE_FORMAT);
    }
  }, {
    key: 'getBroadcastsString',
    value: function getBroadcastsString() {
      return this.broadcasts.toString();
    }
  }, {
    key: 'isUpcoming',
    value: function isUpcoming() {
      return this.unixMillisecondsStartTime > (0, _momentTimezone2.default)().valueOf();
    }
  }, {
    key: 'hasStarted',
    value: function hasStarted() {
      return !this.isUpcoming() && this.status != _Constants2.default.PREGAME;
    }
  }]);

  return GameMetadata;
}((0, _immutable.Record)(defaults));

exports.default = GameMetadata;
;