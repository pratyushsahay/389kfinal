'use strict';
'use es6';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _enumify = require('enumify');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameStatus = function (_Enum) {
  _inherits(GameStatus, _Enum);

  function GameStatus() {
    _classCallCheck(this, GameStatus);

    return _possibleConstructorReturn(this, (GameStatus.__proto__ || Object.getPrototypeOf(GameStatus)).apply(this, arguments));
  }

  return GameStatus;
}(_enumify.Enum);

exports.default = GameStatus;
;

GameStatus.initEnum({
  PREGAME: {
    nbaStatsGameStatus: 1
  },
  LIVE: {
    nbaStatsGameStatus: 2
  },
  HALFTIME: {
    nbaStatsGameStatus: 'Halftime'
  },
  FINAL: {
    nbaStatsGameStatus: 3
  }
});