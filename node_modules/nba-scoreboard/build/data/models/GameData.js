'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _immutable = require('immutable');

var _GameBoxScoreLeaders = require('./GameBoxScoreLeaders');

var _GameBoxScoreLeaders2 = _interopRequireDefault(_GameBoxScoreLeaders);

var _GameScores = require('./GameScores');

var _GameScores2 = _interopRequireDefault(_GameScores);

var _GameMetadata = require('./GameMetadata');

var _GameMetadata2 = _interopRequireDefault(_GameMetadata);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaults = {
  metadata: new _GameMetadata2.default(),
  scores: new _GameScores2.default(),
  boxScoreLeaders: new _GameBoxScoreLeaders2.default(),
  playByPlay: []
};

var GameData = function (_Record) {
  _inherits(GameData, _Record);

  function GameData() {
    _classCallCheck(this, GameData);

    return _possibleConstructorReturn(this, (GameData.__proto__ || Object.getPrototypeOf(GameData)).apply(this, arguments));
  }

  return GameData;
}((0, _immutable.Record)(defaults));

exports.default = GameData;