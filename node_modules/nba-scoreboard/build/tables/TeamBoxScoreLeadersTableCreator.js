'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _cliTable = require('cli-table2');

var _cliTable2 = _interopRequireDefault(_cliTable);

var _colors = require('colors');

var _colors2 = _interopRequireDefault(_colors);

var _nodeEmoji = require('node-emoji');

var _nodeEmoji2 = _interopRequireDefault(_nodeEmoji);

var _immutable = require('immutable');

var _Constants = require('../constants/Constants');

var _Constants2 = _interopRequireDefault(_Constants);

var _Formatter = require('./formatters/Formatter');

var _Formatter2 = _interopRequireDefault(_Formatter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var TeamBoxScoreLeadersTableCreator = function () {
  function TeamBoxScoreLeadersTableCreator() {
    _classCallCheck(this, TeamBoxScoreLeadersTableCreator);
  }

  _createClass(TeamBoxScoreLeadersTableCreator, null, [{
    key: 'create',
    value: function create(data) {
      var table = new _cliTable2.default(TeamBoxScoreLeadersTableCreator.getTableConfiguration().toJS());
      TeamBoxScoreLeadersTableCreator.buildRows(data).forEach(function (row) {
        return table.push(row.toJS());
      });
      return table.toString();
    }
  }, {
    key: 'buildRows',
    value: function buildRows(data) {
      var rows = (0, _immutable.List)();
      rows = rows.push(_immutable.List.of(TeamBoxScoreLeadersTableCreator.getPointsHeaderValue(), data.points.value, data.points.getLeadersAbbreviatedNames()));
      rows = rows.push(_immutable.List.of(TeamBoxScoreLeadersTableCreator.getAssistsHeaderValue(), data.assists.value, data.assists.getLeadersAbbreviatedNames()));
      rows = rows.push(_immutable.List.of(TeamBoxScoreLeadersTableCreator.getReboundsHeaderValue(), data.rebounds.value, data.rebounds.getLeadersAbbreviatedNames()));
      return rows;
    }
  }, {
    key: 'getTableConfiguration',
    value: function getTableConfiguration() {
      return (0, _immutable.Map)({
        head: _immutable.List.of((0, _immutable.Map)({
          content: TeamBoxScoreLeadersTableCreator.getContentValue(),
          colSpan: TeamBoxScoreLeadersTableCreator.getColumnSpan()
        }))
      });
    }
  }, {
    key: 'getContentValue',
    value: function getContentValue() {
      return 'Leaders';
    }
  }, {
    key: 'getColumnSpan',
    value: function getColumnSpan() {
      return 3;
    }
  }, {
    key: 'getPointsHeaderValue',
    value: function getPointsHeaderValue() {
      return 'Points';
    }
  }, {
    key: 'getAssistsHeaderValue',
    value: function getAssistsHeaderValue() {
      return 'Assists';
    }
  }, {
    key: 'getReboundsHeaderValue',
    value: function getReboundsHeaderValue() {
      return 'Rebounds';
    }
  }]);

  return TeamBoxScoreLeadersTableCreator;
}();

exports.default = TeamBoxScoreLeadersTableCreator;