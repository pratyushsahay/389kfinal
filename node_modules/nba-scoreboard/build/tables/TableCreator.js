'use strict';
'use es6';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _cliTable = require('cli-table2');

var _cliTable2 = _interopRequireDefault(_cliTable);

var _immutable = require('immutable');

var _GamesTables = require('../data/models/GamesTables');

var _GamesTables2 = _interopRequireDefault(_GamesTables);

var _PlayByPlayTableCreator = require('./PlayByPlayTableCreator');

var _PlayByPlayTableCreator2 = _interopRequireDefault(_PlayByPlayTableCreator);

var _ActiveGameTableCreator = require('./ActiveGameTableCreator');

var _ActiveGameTableCreator2 = _interopRequireDefault(_ActiveGameTableCreator);

var _UpcomingGamesTableCreator = require('./UpcomingGamesTableCreator');

var _UpcomingGamesTableCreator2 = _interopRequireDefault(_UpcomingGamesTableCreator);

var _TeamBoxScoreLeadersTableCreator = require('./TeamBoxScoreLeadersTableCreator');

var _TeamBoxScoreLeadersTableCreator2 = _interopRequireDefault(_TeamBoxScoreLeadersTableCreator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var TableCreator = function () {
  function TableCreator() {
    _classCallCheck(this, TableCreator);
  }

  _createClass(TableCreator, null, [{
    key: 'create',
    value: function create(data) {
      return new _GamesTables2.default({
        active: TableCreator.createActiveGamesTables(data.get('active')),
        upcoming: TableCreator.createUpcomingGamesTable(data.get('upcoming'))
      });
    }
  }, {
    key: 'createUpcomingGamesTable',
    value: function createUpcomingGamesTable(games) {
      return _UpcomingGamesTableCreator2.default.create(games);
    }
  }, {
    key: 'createActiveGamesTables',
    value: function createActiveGamesTables(games) {
      var tables = (0, _immutable.List)();
      games.forEach(function (game) {
        var table = new _cliTable2.default();
        table.push([{
          content: _ActiveGameTableCreator2.default.create(game.metadata),
          colSpan: 2,
          hAlign: 'center'
        }]);
        table.push([{
          content: _TeamBoxScoreLeadersTableCreator2.default.create(game.boxScoreLeaders.home),
          colSpan: 1,
          hAlign: 'center'
        }, {
          content: _TeamBoxScoreLeadersTableCreator2.default.create(game.boxScoreLeaders.visitor),
          colSpan: 1,
          hAlign: 'center'
        }]);
        table.push([{
          content: _PlayByPlayTableCreator2.default.create(game.playByPlay),
          colSpan: 2,
          hAlign: 'center'
        }]);
        tables = tables.push(table.toString());
      });

      return tables;
    }
  }]);

  return TableCreator;
}();

exports.default = TableCreator;