'use strict';
'use es6';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _enumify = require('enumify');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Team = function (_Enum) {
  _inherits(Team, _Enum);

  function Team() {
    _classCallCheck(this, Team);

    return _possibleConstructorReturn(this, (Team.__proto__ || Object.getPrototypeOf(Team)).apply(this, arguments));
  }

  return Team;
}(_enumify.Enum);

exports.default = Team;
;

Team.initEnum({
  ATLANTA_HAWKS: {
    abbreviation: 'ATL',
    emoji: '🐦'
  },
  BOSTON_CELTICS: {
    abbreviation: 'BOS',
    emoji: '🍀'
  },
  BROOKLYN_NETS: {
    abbreviation: 'BKN',
    emoji: '🌆'
  },
  CLEVELAND_CAVALIERS: {
    abbreviation: 'CLE',
    emoji: '⚔'
  },
  CHARLOTTE_HORNETS: {
    abbreviation: 'CHA',
    emoji: '🐝'
  },
  CHICAGO_BULLS: {
    abbreviation: 'CHI',
    emoji: '🐮'
  },
  DALLAS_MAVERICKS: {
    abbreviation: 'DAL',
    emoji: '🐴'
  },
  DENVER_NUGGETS: {
    abbreviation: 'DEN',
    emoji: '🔨'
  },
  DETROIT_PISTONS: {
    abbreviation: 'DET',
    emoji: '🔧'
  },
  GOLDEN_STATE_WARRIORS: {
    abbreviation: 'GSW',
    emoji: '👌'
  },
  HOUSTON_ROCKETS: {
    abbreviation: 'HOU',
    emoji: '🚀'
  },
  INDIANA_PACERS: {
    abbreviation: 'IND',
    emoji: '🏁'
  },
  LOS_ANGELES_CLIPPERS: {
    abbreviation: 'LAC',
    emoji: '🚢'
  },
  LOS_ANGELES_LAKERS: {
    abbreviation: 'LAL',
    emoji: '🎥'
  },
  MEMPHIS_GRIZZLIES: {
    abbreviation: 'MEM',
    emoji: '🐻'
  },
  MIAMI_HEAT: {
    abbreviation: 'MIA',
    emoji: '🔥'
  },
  MILWAUKEE_BUCKS: {
    abbreviation: 'MIL',
    emoji: '🍻'
  },
  MINNESOTA_TIMBERWOLVES: {
    abbreviation: 'MIN',
    emoji: '🐺'
  },
  NEW_ORLEANS_PELICANS: {
    abbreviation: 'NOP',
    emoji: '⚜'
  },
  NEW_YORK_KNICKS: {
    abbreviation: 'NYK',
    emoji: '🗽'
  },
  OKLAHOMA_CITY_THUNDER: {
    abbreviation: 'OKC',
    emoji: '💥'
  },
  ORLANDO_MAGIC: {
    abbreviation: 'ORL',
    emoji: '🔮'
  },
  PHILADELPHIA_76ERS: {
    abbreviation: 'PHI',
    emoji: '🔔'
  },
  PHOENIX_SUNS: {
    abbreviation: 'PHX',
    emoji: '🔆'
  },
  PORTLAND_TRAIL_BLAZERS: {
    abbreviation: 'POR',
    emoji: '💧'
  },
  SACRAMENTO_KINGS: {
    abbreviation: 'SAC',
    emoji: '👑'
  },
  SAN_ANTONIO_SPURS: {
    abbreviation: 'SAS',
    emoji: '🌵'
  },
  TORONTO_RAPTORS: {
    abbreviation: 'TOR',
    emoji: '🍁'
  },
  UTAH_JAZZ: {
    abbreviation: 'UTA',
    emoji: '🎷'
  },
  WASHINGTON_WIZARDS: {
    abbreviation: 'WAS',
    emoji: '💫'
  }
});